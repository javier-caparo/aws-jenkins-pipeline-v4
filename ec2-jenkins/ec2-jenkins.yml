AWSTemplateFormatVersion: '2010-09-09'
Metadata:
    License: Apache-2.0
Description: 'AWS CloudFormation  Template :
    Create a jenkins Server in Amazon EC2 UBUNTU 18.04 instance with awscli
    , docker, hadolint, eksctl, kubectl  installed'
Parameters:
    KeyName:
        Description: Name of an existing EC2 KeyPair to enable SSH access to the instance
        Type: AWS::EC2::KeyPair::KeyName
        ConstraintDescription: must be the name of an existing EC2 KeyPair.
    IamRole:
        Description: IAM Role with pewrmissions to EC2, ECS, EKS, S3, Cloudformation
        Type: String
        Default: Jenkins_Role
    InstanceType:
        Description: Jenkins EC2 instance type
        Type: String
        Default: t3.medium
        AllowedValues: [t3.micro, t3.small, t3.medium, t3.large, t3.xlarge, t3.2xlarge,
        m4.large, m4.xlarge, m4.2xlarge, m4.4xlarge, m4.10xlarge,
        m5.large, m5.xlarge, m5.2xlarge, m5.4xlarge,
        c5.large, c5.xlarge, c5.2xlarge, c5.4xlarge, c5.9xlarge]
        ConstraintDescription: must be a valid EC2 instance type.
    Location:
        Description: The IP address range that can be used to reach the EC2 instances
        Type: String
        MinLength: 9
        MaxLength: 18
        Default: 0.0.0.0/0
        AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
        ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
Resources:
    InstanceSecurityGroup:
        Type: AWS::EC2::SecurityGroup
        Properties:
            GroupDescription: Enable SSH access via port 22
            SecurityGroupIngress:
            - IpProtocol: tcp
              FromPort: 22
              ToPort: 22
              CidrIp: !Ref 'Location'
            - IpProtocol: tcp
              FromPort: 8080
              ToPort: 8080
              CidrIp: !Ref 'Location'
            - IpProtocol: tcp
              FromPort: 80
              ToPort: 80
              CidrIp: !Ref 'Location'
            - IpProtocol: tcp
              FromPort: 3000
              ToPort: 3000
              CidrIp: !Ref 'Location'
    EC2Instance:
        Type: AWS::EC2::Instance
        #CreationPolicy:
        #    ResourceSignal:
        #      Timeout: PT3M
        Properties:
            InstanceType: !Ref 'InstanceType'
            SecurityGroups: [!Ref 'InstanceSecurityGroup']
            KeyName: !Ref 'KeyName'
            ImageId: ami-0a634ae95e11c6f91 # Ubuntu 18.04 LTS in Oregon ( us-west-2)
            IamInstanceProfile : !Ref 'IamRole'
            BlockDeviceMappings:
                - DeviceName: /dev/sda1
                  Ebs:
                    VolumeType: gp2
                    VolumeSize: '80'
                    DeleteOnTermination: 'false'
                    Encrypted: 'true'
            Tags:
                - Key: Name
                  Value: Ubuntu Jenkins Server
                - Key: Type
                  Value: Server Instance
            UserData:
              'Fn::Base64': !Sub |
                #!/bin/bash -ex
                #Remove the menu.lst config.
                sudo rm /boot/grub/menu.lst
                # Generate a new configuration file.
                sudo update-grub-legacy-ec2 -y
                #Upgrade the configuration
                sudo apt-get dist-upgrade -qq --force-yes
                sudo apt update -y 
                # install the right java version & unzip
                sudo apt install -y  default-jre
                sudo apt install -y default-jdk
                sudo apt install -y unzip
                # install git
                sudo apt install -y git

Outputs:
    InstanceId:
        Description: InstanceId of the newly created EC2 Jenkins instance server
        Value: !Ref 'EC2Instance'
    AZ:
        Description: Availability Zone of the newly created EC2 instance
        Value: !GetAtt [EC2Instance, AvailabilityZone]
    PublicDNS:
        Description: Public DNSName of the newly created EC2 instance
        Value: !GetAtt [EC2Instance, PublicDnsName]
    PublicIP:
        Description: Public IP address of the newly created EC2 instance
        Value: !GetAtt [EC2Instance, PublicIp]      